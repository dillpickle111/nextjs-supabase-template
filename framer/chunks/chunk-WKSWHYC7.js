// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 20280b2ee2fd9328 "Cloudeo (copy)", do not edit manually */
import {
  className,
  css,
  fonts
} from "./chunk-ZT45FOFS.js";

// /:https://framerusercontent.com/modules/d2dU8E2YOpKrkoJGG4IM/nC1kEoFAgEo5vsgNJv2a/BMiAbHLsn.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, getFontsFromSharedStyle, Link, RichText, SVG, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var enabledGestures = { HelPtP4df: { hover: true, pressed: true }, OWJH5_crt: { hover: true, pressed: true } };
var cycleOrder = ["HelPtP4df", "egSbss_9B", "OWJH5_crt"];
var serializationHash = "framer-I0W9S";
var variantClassNames = { egSbss_9B: "framer-v-an2c36", HelPtP4df: "framer-v-veyi5u", OWJH5_crt: "framer-v-1lmumfq" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.6, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Active: "egSbss_9B", Dark: "HelPtP4df", Light: "OWJH5_crt" };
var getProps = ({ background, button, buttonColor, click, height, hover, id, label, link, textColot, width, ...props }) => {
  return { ...props, f6jYMykoi: textColot ?? props.f6jYMykoi ?? "var(--token-c5672fec-6041-4722-ae92-3b99e465b08f, rgb(29, 29, 29))", nEPrEpy5p: link ?? props.nEPrEpy5p, Nf7guagqQ: button ?? props.Nf7guagqQ ?? true, p4wWGIlfa: click ?? props.p4wWGIlfa, qHkrgYwGq: label ?? props.qHkrgYwGq ?? "Button", TZE9FN6oA: background ?? props.TZE9FN6oA ?? "rgba(255, 255, 255, 0)", variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "HelPtP4df", YjT0PXok2: hover ?? props.YjT0PXok2, zdzO8B8io: buttonColor ?? props.zdzO8B8io ?? "rgb(0, 0, 0)" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className: className2, layoutId, variant, qHkrgYwGq, f6jYMykoi, TZE9FN6oA, Nf7guagqQ, zdzO8B8io, p4wWGIlfa, YjT0PXok2, nEPrEpy5p, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "HelPtP4df", enabledGestures, ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTapkptnzk = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (p4wWGIlfa) {
      const res = await p4wWGIlfa(...args);
      if (res === false) return false;
    }
  });
  const onMouseEnter17vkigb = activeVariantCallback(async (...args) => {
    setGestureState({ isHovered: true });
    if (YjT0PXok2) {
      const res = await YjT0PXok2(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const isDisplayed = (value) => {
    if (["OWJH5_crt-hover", "OWJH5_crt-pressed"].includes(gestureVariant)) return false;
    if (baseVariant === "OWJH5_crt") return false;
    return value;
  };
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(Link, { href: nEPrEpy5p, motionChild: true, nodeId: "HelPtP4df", scopeId: "BMiAbHLsn", smoothScroll: true, children: /* @__PURE__ */ _jsxs(motion.a, { ...restProps, ...gestureHandlers, className: `${cx(scopingClassNames, "framer-veyi5u", className2, classNames)} framer-m27ms5`, "data-framer-name": "Dark", "data-highlight": true, layoutDependency, layoutId: "HelPtP4df", onMouseEnter: onMouseEnter17vkigb, onTap: onTapkptnzk, ref: refBinding, style: { backgroundColor: TZE9FN6oA, borderBottomLeftRadius: 8, borderBottomRightRadius: 8, borderTopLeftRadius: 8, borderTopRightRadius: 8, ...style }, variants: { "HelPtP4df-hover": { backgroundColor: "rgba(255, 255, 255, 0.1)" }, "HelPtP4df-pressed": { backgroundColor: "rgba(255, 255, 255, 0.2)" }, "OWJH5_crt-hover": { backgroundColor: "rgba(37, 99, 235, 0.08)" }, "OWJH5_crt-pressed": { backgroundColor: "rgba(37, 99, 235, 0.15)" }, egSbss_9B: { backgroundColor: "rgba(255, 255, 255, 0.2)" } }, ...addPropertyOverrides({ "HelPtP4df-hover": { "data-framer-name": void 0 }, "HelPtP4df-pressed": { "data-framer-name": void 0 }, "OWJH5_crt-hover": { "data-framer-name": void 0 }, "OWJH5_crt-pressed": { "data-framer-name": void 0 }, egSbss_9B: { "data-framer-name": "Active" }, OWJH5_crt: { "data-framer-name": "Light" } }, baseVariant, gestureVariant), children: [/* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.p, { className: "framer-styles-preset-1bix4b3", "data-styles-preset": "rh8s6g3Pk", style: { "--framer-text-color": "var(--extracted-r6o4lv, var(--variable-reference-f6jYMykoi-BMiAbHLsn))" }, children: "Button" }) }), className: "framer-1cxdedu", fonts: ["Inter"], layoutDependency, layoutId: "Ggsjwt2Tt", style: { "--extracted-r6o4lv": "var(--variable-reference-f6jYMykoi-BMiAbHLsn)", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline", "--variable-reference-f6jYMykoi-BMiAbHLsn": f6jYMykoi }, text: qHkrgYwGq, variants: { OWJH5_crt: { "--extracted-r6o4lv": "var(--token-c5672fec-6041-4722-ae92-3b99e465b08f, rgb(29, 29, 29))" } }, verticalAlignment: "top", withExternalLayout: true, ...addPropertyOverrides({ OWJH5_crt: { children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.p, { className: "framer-styles-preset-1bix4b3", "data-styles-preset": "rh8s6g3Pk", style: { "--framer-text-color": "var(--extracted-r6o4lv, var(--token-c5672fec-6041-4722-ae92-3b99e465b08f, rgb(29, 29, 29)))" }, children: "Button" }) }) } }, baseVariant, gestureVariant) }), isDisplayed(Nf7guagqQ) && /* @__PURE__ */ _jsx(SVG, { className: "framer-qi70vu", "data-framer-name": "Icon", fill: zdzO8B8io, intrinsicHeight: 32, intrinsicWidth: 32, layoutDependency, layoutId: "NPhoBxiax", style: { rotate: 0 }, svg: '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 256 256"><path d="m213.66 101.66-80 80a8 8 0 0 1-11.32 0l-80-80a8 8 0 0 1 11.32-11.32L128 164.69l74.34-74.35a8 8 0 0 1 11.32 11.32Z"/></svg>', variants: { "HelPtP4df-hover": { rotate: 180 }, "HelPtP4df-pressed": { rotate: 180 }, egSbss_9B: { rotate: 180 } }, withExternalLayout: true })] }) }) }) }) });
});
var css2 = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-I0W9S.framer-m27ms5, .framer-I0W9S .framer-m27ms5 { display: block; }", ".framer-I0W9S.framer-veyi5u { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 3px; height: min-content; justify-content: center; overflow: hidden; padding: 10px 12px 10px 12px; position: relative; text-decoration: none; width: min-content; will-change: var(--framer-will-change-override, transform); }", ".framer-I0W9S .framer-1cxdedu { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", ".framer-I0W9S .framer-qi70vu { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 18px); position: relative; width: 18px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-I0W9S.framer-veyi5u { gap: 0px; } .framer-I0W9S.framer-veyi5u > * { margin: 0px; margin-left: calc(3px / 2); margin-right: calc(3px / 2); } .framer-I0W9S.framer-veyi5u > :first-child { margin-left: 0px; } .framer-I0W9S.framer-veyi5u > :last-child { margin-right: 0px; } }", ...css];
var FramerBMiAbHLsn = withCSS(Component, css2, "framer-I0W9S");
var stdin_default = FramerBMiAbHLsn;
FramerBMiAbHLsn.displayName = "Button/Button Navbar";
FramerBMiAbHLsn.defaultProps = { height: 40, width: 88 };
addPropertyControls(FramerBMiAbHLsn, { variant: { options: ["HelPtP4df", "egSbss_9B", "OWJH5_crt"], optionTitles: ["Dark", "Active", "Light"], title: "Variant", type: ControlType.Enum }, qHkrgYwGq: { defaultValue: "Button", displayTextArea: false, title: "Label", type: ControlType.String }, f6jYMykoi: { defaultValue: "var(--token-c5672fec-6041-4722-ae92-3b99e465b08f, rgb(29, 29, 29))", title: "Text Colot", type: ControlType.Color }, TZE9FN6oA: { defaultValue: "rgba(255, 255, 255, 0)", title: "Background", type: ControlType.Color }, Nf7guagqQ: { defaultValue: true, title: "Button", type: ControlType.Boolean }, zdzO8B8io: { defaultValue: "rgb(0, 0, 0)", title: "Button Color", type: ControlType.Color }, p4wWGIlfa: { title: "Click", type: ControlType.EventHandler }, YjT0PXok2: { title: "Hover", type: ControlType.EventHandler }, nEPrEpy5p: { title: "Link", type: ControlType.Link } });
addFonts(FramerBMiAbHLsn, [{ explicitInter: true, fonts: [{ family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400" }] }, ...getFontsFromSharedStyle(fonts)], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
